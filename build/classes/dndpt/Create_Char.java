/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dndpt;

/**
 *
 * @author Justin
 */
public class Create_Char extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Create_Char() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        TextName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ClassBox = new javax.swing.JComboBox<>();
        TypeTxt = new javax.swing.JTextField();
        AllignBox = new javax.swing.JComboBox<>();
        HitTxt = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SkillssTxt = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        SkillPointAbilityTxt = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        SpellTypeTxt = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        EpicFeatBaseTxt = new javax.swing.JTextField();
        EpicFeatInt = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        EpicFullTxt = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        ReqRaceTxt = new javax.swing.JTextField();
        ReqWeaponTxt = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        ReqBaseAttackTxt = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        ReqSkillTxt = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        ReqFeatTxt = new javax.swing.JTextField();
        ReqSpellsTxt = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        ReqLanTxt = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        ReqPsiTxt = new javax.swing.JTextField();
        ReqEpicFeatTxt = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        ReqSpecialTxt = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        FullTxt = new javax.swing.JTextArea();
        jLabel83 = new javax.swing.JLabel();
        RefTxt = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        SubmitBtn = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        ProfTxt = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        Spell2Txt = new javax.swing.JTextArea();
        jScrollPane11 = new javax.swing.JScrollPane();
        Spell1Txt = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        Spell3Txt = new javax.swing.JTextArea();
        jScrollPane13 = new javax.swing.JScrollPane();
        Spell4Txt = new javax.swing.JTextArea();
        jScrollPane14 = new javax.swing.JScrollPane();
        Spell5Txt = new javax.swing.JTextArea();
        jLabel81 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        ShowBtn = new javax.swing.JButton();
        SkillsTxt = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        SkillTxt = new javax.swing.JTextArea();
        jScrollPane17 = new javax.swing.JScrollPane();
        EpicFeatListTxt = new javax.swing.JTextArea();
        jLabel84 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1500, 2000));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Character Creation");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(12, 85, 302, 29);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel27.setText("D & D");
        getContentPane().add(jLabel27);
        jLabel27.setBounds(109, 43, 116, 29);

        TextName.setText("Character Name");
        TextName.setName("TextFieldName"); // NOI18N
        TextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        ClassBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Barbarian", "Bard", "Cleric", "Druid", "Fighter", "Monk", "Paladin", "Ranger", "Rogue", "Sorcerer", "Wizard", "Agent Retriever", "Cosmic Descryer", "Divine Emissary", "Epic Infiltrator", "Guardian Paramount", "High Proselytizer", "Legendary Dreadnought", "Perfect Wight", "Union Sentinel", "Adept", "Aristocrat", "Commoner", "Expert", "Warrior", "Arcane Archer", "Arcane Trickster", "Archmage", "Assassin", "Blackguard", "Dragon Disciple", "Duelist", "Dwarven Defender", "Eldritch Knight", "Hierophant", "Horizon Walker", "Loremaster", "Mystic Theurge", "Shadowdancer", "Thaumaturgist", "Psion", "Psychic Warrior", "Soulknife", "Wilder", "Cerebremancer", "Elocater", "Psionic Fist", "Slayer", "Metamind", "Psion Uncarnate", "Pyrokineticist", "Thrallherd", "War Mind" }));
        ClassBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassBoxActionPerformed(evt);
            }
        });

        TypeTxt.setFocusable(false);

        AllignBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lawful Good", "Neutral Good", "Chaotic Good", "Lawful Neutral", "Neutral", "Chaotic Neutral", "Lawful Evil", "Neutral Evil", "Chaotic Evil" }));

        HitTxt.setFocusable(false);

        jLabel61.setText("Hit Die");
        jLabel61.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setText("Allignment");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel21.setText("Type");
        jLabel21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Class");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SkillssTxt.setFocusable(false);

        jLabel63.setText("Skill Points");
        jLabel63.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SkillPointAbilityTxt.setFocusable(false);

        jLabel64.setText("Skill Points Ability");
        jLabel64.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel67.setText("Spell Type");
        jLabel67.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SpellTypeTxt.setFocusable(false);

        jLabel68.setText("Epic Feat Base Level");
        jLabel68.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        EpicFeatBaseTxt.setFocusable(false);

        EpicFeatInt.setFocusable(false);

        jLabel69.setText("Epic Feat Interval");
        jLabel69.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel70.setText("Epic Full Text");
        jLabel70.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        EpicFullTxt.setFocusable(false);

        jLabel71.setText("Required Race");
        jLabel71.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ReqRaceTxt.setFocusable(false);

        ReqWeaponTxt.setFocusable(false);

        jLabel72.setText("Required Weapon Proficiency");
        jLabel72.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ReqBaseAttackTxt.setFocusable(false);

        jLabel73.setText("Required Base Attack Bonus");
        jLabel73.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel74.setText("Required Skill");
        jLabel74.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ReqSkillTxt.setFocusable(false);

        jLabel75.setText("Required Feat");
        jLabel75.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ReqFeatTxt.setFocusable(false);

        ReqSpellsTxt.setFocusable(false);

        jLabel76.setText("Required Spells");
        jLabel76.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ReqLanTxt.setFocusable(false);

        jLabel77.setText("Required Languages");
        jLabel77.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel78.setText("Required Psionics");
        jLabel78.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ReqPsiTxt.setFocusable(false);

        ReqEpicFeatTxt.setFocusable(false);

        jLabel79.setText("Required Epic Feat");
        jLabel79.setToolTipText("");
        jLabel79.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        ReqSpecialTxt.setDoubleBuffered(true);
        ReqSpecialTxt.setFocusable(false);

        jLabel80.setText("Required Special");
        jLabel80.setToolTipText("");
        jLabel80.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FullTxt.setColumns(20);
        FullTxt.setLineWrap(true);
        FullTxt.setRows(5);
        FullTxt.setWrapStyleWord(true);
        FullTxt.setFocusable(false);
        jScrollPane15.setViewportView(FullTxt);

        jLabel83.setText("Full Text");
        jLabel83.setToolTipText("");
        jLabel83.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RefTxt.setFocusable(false);

        jLabel82.setText("Reference");
        jLabel82.setToolTipText("");
        jLabel82.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextName))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel72)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel73)
                                        .addGap(12, 12, 12))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel74, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel76, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ReqBaseAttackTxt)
                                    .addComponent(ReqWeaponTxt)
                                    .addComponent(ReqSpellsTxt)
                                    .addComponent(ReqSkillTxt)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 47, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel68, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel69, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(EpicFeatBaseTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                                            .addComponent(EpicFeatInt)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel67)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SpellTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel63)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SkillssTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel71)
                                            .addComponent(jLabel70))
                                        .addGap(12, 12, 12)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ReqRaceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(EpicFullTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel64, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(SkillPointAbilityTxt)
                                            .addComponent(ClassBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(AllignBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(HitTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(TypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel75, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel77))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ReqFeatTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                                            .addComponent(ReqLanTxt)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel79)
                                            .addComponent(jLabel78)
                                            .addComponent(jLabel80)
                                            .addComponent(jLabel83)
                                            .addComponent(jLabel82))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(RefTxt)
                                            .addComponent(ReqPsiTxt)
                                            .addComponent(ReqEpicFeatTxt)
                                            .addComponent(ReqSpecialTxt)
                                            .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)))))))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClassBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AllignBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SkillssTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SkillPointAbilityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpellTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EpicFeatBaseTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EpicFeatInt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel69))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EpicFullTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReqRaceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel71))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReqWeaponTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel72))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReqBaseAttackTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReqSkillTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel74))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReqFeatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel75))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReqSpellsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel76))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(ReqLanTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(ReqPsiTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReqEpicFeatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel79))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80)
                    .addComponent(ReqSpecialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel83)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RefTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel82))
                .addGap(66, 66, 66))
        );

        TextName.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jPanel4);
        jPanel4.setBounds(12, 132, 627, 906);

        SubmitBtn.setText("Submit");
        SubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt);
            }
        });
        getContentPane().add(SubmitBtn);
        SubmitBtn.setBounds(333, 60, 290, 25);

        ProfTxt.setColumns(20);
        ProfTxt.setLineWrap(true);
        ProfTxt.setRows(5);
        ProfTxt.setWrapStyleWord(true);
        ProfTxt.setFocusable(false);
        jScrollPane9.setViewportView(ProfTxt);

        getContentPane().add(jScrollPane9);
        jScrollPane9.setBounds(740, 341, 438, 188);

        Spell2Txt.setColumns(20);
        Spell2Txt.setLineWrap(true);
        Spell2Txt.setRows(5);
        Spell2Txt.setWrapStyleWord(true);
        Spell2Txt.setFocusable(false);
        jScrollPane10.setViewportView(Spell2Txt);

        getContentPane().add(jScrollPane10);
        jScrollPane10.setBounds(740, 641, 438, 69);

        Spell1Txt.setColumns(20);
        Spell1Txt.setLineWrap(true);
        Spell1Txt.setRows(5);
        Spell1Txt.setWrapStyleWord(true);
        Spell1Txt.setFocusable(false);
        jScrollPane11.setViewportView(Spell1Txt);

        getContentPane().add(jScrollPane11);
        jScrollPane11.setBounds(740, 559, 438, 69);

        Spell3Txt.setColumns(20);
        Spell3Txt.setLineWrap(true);
        Spell3Txt.setRows(5);
        Spell3Txt.setWrapStyleWord(true);
        Spell3Txt.setFocusable(false);
        jScrollPane12.setViewportView(Spell3Txt);

        getContentPane().add(jScrollPane12);
        jScrollPane12.setBounds(740, 723, 438, 69);

        Spell4Txt.setColumns(20);
        Spell4Txt.setLineWrap(true);
        Spell4Txt.setRows(5);
        Spell4Txt.setWrapStyleWord(true);
        Spell4Txt.setFocusable(false);
        jScrollPane13.setViewportView(Spell4Txt);

        getContentPane().add(jScrollPane13);
        jScrollPane13.setBounds(740, 805, 438, 69);

        Spell5Txt.setColumns(20);
        Spell5Txt.setLineWrap(true);
        Spell5Txt.setRows(5);
        Spell5Txt.setWrapStyleWord(true);
        Spell5Txt.setFocusable(false);
        jScrollPane14.setViewportView(Spell5Txt);

        getContentPane().add(jScrollPane14);
        jScrollPane14.setBounds(740, 887, 438, 69);

        jLabel81.setText("Spell Lists");
        jLabel81.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel81);
        jLabel81.setBounds(937, 536, 61, 20);

        jLabel62.setText("Proficiencies");
        jLabel62.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel62);
        jLabel62.setBounds(657, 341, 75, 20);

        ShowBtn.setText("Show Class Info");
        ShowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowBtnActionPerformed(evt);
            }
        });
        getContentPane().add(ShowBtn);
        ShowBtn.setBounds(332, 89, 294, 25);

        SkillsTxt.setText("Skills");
        SkillsTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SkillsTxt);
        SkillsTxt.setBounds(699, 146, 33, 20);

        SkillTxt.setColumns(20);
        SkillTxt.setLineWrap(true);
        SkillTxt.setRows(5);
        SkillTxt.setWrapStyleWord(true);
        SkillTxt.setFocusable(false);
        jScrollPane16.setViewportView(SkillTxt);

        getContentPane().add(jScrollPane16);
        jScrollPane16.setBounds(740, 146, 438, 188);

        EpicFeatListTxt.setColumns(20);
        EpicFeatListTxt.setLineWrap(true);
        EpicFeatListTxt.setRows(5);
        EpicFeatListTxt.setWrapStyleWord(true);
        EpicFeatListTxt.setFocusable(false);
        jScrollPane17.setViewportView(EpicFeatListTxt);

        getContentPane().add(jScrollPane17);
        jScrollPane17.setBounds(1196, 146, 484, 272);

        jLabel84.setText("Epic Feat List");
        jLabel84.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel84);
        jLabel84.setBounds(1200, 120, 79, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ShowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowBtnActionPerformed
        String itemText = (String)ClassBox.getSelectedItem( );
        if (itemText == "Barbarian")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d12");
            SkillTxt.setText("Climb, Craft, Handle Animal, Intimidate, Jump, Listen, Ride, Survival, Swim");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Armor Skin, Chaotic Rage, Damage Reduction, "
                    + "Devastating Critical, Dire Charge, Epic Endurance, Epic Prowess, "
                    + "Epic Speed, Epic Toughness, Epic Weapon Focus, Fast Healing, Incite Rage, "
                    + "Legendary Climber, Legendary Leaper, Legendary Rider, Legendary Tracker,"
                    + " Legendary Wrestler, Mighty Rage, Overwhelming Critical, Ruinous Rage, "
                    + "Terrifying Rage, Thundering Rage");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            
            ProfTxt.setText("A barbarian is proficient with all simple and martial weapons, "
                    + "light armor, medium armor, and shields (except tower shields).");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None");
        }
        else if (itemText == "Bard")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d6");
            SkillTxt.setText ("Appraise, Balance, Bluff, Climb, Concentration, Craft, "
                    + "Decipher Script, Diplomacy, Disguise, Escape Artist, Gather Information, "
                    + "Hide, Jump, Knowledge (all skills, taken individually), Listen, "
                    + "Move Silently, Perform, Profession, Sense Motive, Sleight of Hand, "
                    + "Speak Language (n/a), Spellcraft, Swim, Tumble, Use Magic Device");
            SkillssTxt.setText ("6");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText(" Augmented Alchemy, Deafening Song, Epic Inspiration, "
                    + "Epic Leadership, Epic Reputation, Epic Skill Focus, Group Inspiration, "
                    + "Hindering Song, Improved Combat Casting, Improved Metamagic, Improved Spell Capacity, "
                    + "Inspire Excellence, Lasting Inspiration, Master Staff, Master Wand, "
                    + "Music of the Gods, Permanent Emanation, Polyglot, Ranged Inspiration, "
                    + "Rapid Inspiration, Reactive Countersong, Spell Knowledge, Spell Stowaway, "
                    + "Spell Opportunity, Tenacious Magic");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            
            ProfTxt.setText("A bard is proficient with all simple weapons, plus the longsword, "
                    + "rapier, sap, short sword, shortbow, and whip. Bards are proficient with"
                    + " light armor and shields (except tower shields). A bard can cast bard "
                    + "spells while wearing light armor without incurring the normal arcane "
                    + "spell failure chance. However, like any other arcane spellcaster, a bard "
                    + "wearing medium or heavy armor or using a shield incurs a chance of arcane "
                    + "spell failure if the spell in question has a somatic component (most do). "
                    + "A multiclass bard still incurs the normal arcane spell failure chance for "
                    + "arcane spells received from other classes.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Cleric")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d8");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, Heal, "
                    + "Knowledge (arcana), Knowledge (history), Knowledge (religion), "
                    + "Knowledge (the planes), Profession, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Divine");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Armor Skin, Automatic Quicken Spell, Automatic Silent Spell, "
                    + "Automatic Still Spell, Bonus Domain, Enhance Spell, Epic Spell Focus, "
                    + "Epic Spell Penetration, Epic Spellcasting, Ignore Material Components, "
                    + "Improved Alignment-Based Casting, Improved Combat Casting, Improved Heighten Spell, "
                    + "Improved Metamagic, Improved Spell Capacity, Intensify Spell, Multispell, "
                    + "Negative Energy Burst, Permanent Emanation, Planar Turning, Positive Energy Aura, "
                    + "Spectral Strike, Spell Stowaway, Spell Opportunity, Spontaneous Domain Access, "
                    + "Spontaneous Spell, Tenacious Magic, Undead Mastery, Zone of Animation");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("Clerics are proficient with all simple weapons, with all types of armor "
                    + "(light, medium, and heavy), and with shields (except tower shields)."
                    + "A cleric who chooses the War domain receives the Weapon Focus feat related "
                    + "to his deity's weapon as a bonus feat. He also receives the appropriate "
                    + "Martial Weapon Proficiency feat as a bonus feat, if the weapon falls into that category.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Druids")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d8");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, "
                    + "Handle Animal, Heal, Knowledge (nature), "
                    + "Listen, Profession, Ride, Spellcraft, Spot, "
                    + "Survival, Swim");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Divine");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Automatic Quicken Spell, Automatic Silent Spell, "
                    + "Automatic Still Spell, Colossal Wild Shape, Diminutive Wild Shape, "
                    + "Dragon Wild Shape, Energy Resistance, Enhance Spell, Epic Spell Focus, "
                    + "Epic Spell Penetration, Epic Spellcasting, Fast Healing, Fine Wild Shape, "
                    + "Gargantuan Wild Shape, Ignore Material Components, Improved Combat Casting,"
                    + " Improved Elemental Wild Shape, Improved Heighten Spell, Improved Metamagic, "
                    + "Improved Spell Capacity, Intensify Spell, Magical Beast Companion, "
                    + "Magical Beast Wild Shape, Multispell, Perfect Health, Permanent Emanation,"
                    + " Plant Wild Shape, Spell Stowaway, Spell Opportunity, Spontaneous Spell, "
                    + "Tenacious Magic, Vermin Wild Shape");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("Druids are proficient with the following weapons: club, "
                    + "dagger, dart, quarterstaff, scimitar, sickle, shortspear, sling, "
                    + "and spear. They are also proficient with all natural attacks "
                    + "(claw, bite, and so forth) of any form they assume with wild shape "
                    + "(see below).Druids are proficient with light and medium armor but are "
                    + "prohibited from wearing metal armor; thus, they may wear only padded, "
                    + "leather, or hide armor. (A druid may also wear wooden armor that has "
                    + "been altered by the ironwood spell so that it functions as though it "
                    + "were steel. See the ironwood spell description) Druids are proficient "
                    + "with shields (except tower shields) but must use only wooden ones.A druid "
                    + "who wears prohibited armor or carries a prohibited shield is unable to "
                    + "cast druid spells or use any of her supernatural or spell-like class "
                    + "abilities while doing so and for 24 hours thereafter.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Fighter")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d10");
            SkillTxt.setText ("Climb, Craft, Handle Animal, Intimidate, Jump, Ride, Swim");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Armor Skin, Combat Archery, Damage Reduction, "
                    + "Devastating Critical, Dire Charge, Distant Shot, Energy Resistance,"
                    + " Epic Endurance, Epic Leadership, Epic Prowess, Epic Toughness, "
                    + "Epic Weapon Focus, Epic Weapon Specialization, Exceptional Deflection,"
                    + " Improved Combat Reflexes, Improved Manyshot, Improved Stunning Fist, "
                    + "Improved Whirlwind Attack, Infinite Deflection, Instant Reload, "
                    + "Legendary Commander, Legendary Rider, Legendary Wrestler, Overwhelming Critical, "
                    + "Penetrate Damage Reduction, Perfect Two-Weapon Fighting, Reflect Arrows, "
                    + "Spellcasting Harrier, Storm of Throws, Superior Initiative, Swarm of Arrows, "
                    + "Two-Weapon Rend, Uncanny Accuracy. In addition to the feats on this list, "
                    + "the fighter may treat any feat designated as a fighter bonus feat, "
                    + "but not listed here, as being on his or her bonus feat list");
            EpicFeatInt.setText("2");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("A fighter is proficient with all simple and martial weapons "
                    + "and with all armor (heavy, medium, and light) and shields (including "
                    + "tower shields).");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Monk")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d8");
            SkillTxt.setText ("Balance, Climb, Concentration, Craft, Diplomacy, "
                    + "Escape Artist, Hide, Jump, Knowledge (arcana), Knowledge (religion), "
                    + "Listen, Move Silently, Perform, Profession, Sense Motive, Spot, Swim, Tumble");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Armor Skin, Blinding Speed, Damage Reduction, "
                    + "Energy Resistance, Epic Prowess, Epic Speed, Epic Toughness,"
                    + " Exceptional Deflection, Fast Healing, Improved Combat Reflexes, "
                    + "Improved ki Strike, Improved Spell Resistance, Improved Stunning Fist, "
                    + "Infinite Deflection, Keen Strike, Legendary Climber, Legendary Wrestler, "
                    + "Reflect Arrows, Righteous Strike, Self-Concealment, Shattering Strike,"
                    + " Vorpal Strike");
            EpicFeatInt.setText("5");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("Monks are proficient with club, crossbow (light or heavy), "
                    + "dagger, handaxe, javelin, kama, nunchaku, quarterstaff, sai, shuriken, "
                    + "siangham, and sling.Monks are not proficient with any armor or shields"
                    + " When wearing armor, using a shield, or carrying a medium or heavy load, "
                    + "a monk loses her AC bonus, as well as her fast movement and flurry of blows abilities.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Paladin")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d10");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, Handle Animal, "
                    + "Heal, Knowledge (nobility and royalty), Knowledge (religion), "
                    + "Profession, Ride, Sense Motive");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Divine");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Armor Skin, Devastating Critical, Epic Leadership, "
                    + "Epic Prowess, Epic Reputation, Epic Toughness, Epic Weapon Focus, "
                    + "Great Smiting, Holy Strike, Improved Aura of Courage, "
                    + "Improved Combat Casting, Improved Spell Capacity, Legendary Commander,"
                    + " Legendary Rider, Overwhelming Critical, Perfect Health,"
                    + " Permanent Emanation, Planar Turning, Positive Energy Aura, "
                    + "Spectral Strike, Spontaneous Spell, Widen Aura of Courage");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("Paladins are proficient with all simple and martial weapons, "
                    + "with all types of armor (heavy, medium, and light), and with "
                    + "shields (except tower shields).");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Ranger")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d8");
            SkillTxt.setText ("Climb, Concentration, Craft, Handle Animal, Heal, Hide, "
                    + "Jump, Knowledge (dungeoneering), Knowledge (geography), Knowledge (nature), "
                    + "Listen, Move Silently, Profession, Ride, Search, Spot, Survival, Swim, Use Rope");
            SkillssTxt.setText("6");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Divine");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Bane of Enemies, Blinding Speed, Combat Archery,"
                    + " Death of Enemies, Distant Shot, Epic Endurance, Epic Prowess, "
                    + "Epic Speed, Epic Toughness, Epic Weapon Focus, Fast Healing,"
                    + " Improved Combat Casting, Improved Favored Enemy, Improved Manyshot,"
                    + " Improved Spell Capacity, Legendary Climber, Legendary Rider, "
                    + "Legendary Tracker, Perfect Health, Perfect Two-Weapon Fighting, "
                    + "Permanent Emanation, Spontaneous Spell, Storm of Throws, Swarm of Arrows, "
                    + "Two-Weapon Rend, Uncanny Accuracy");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("A ranger is proficient with all simple "
                    + "and martial weapons, and with light armor and shields "
                    + "(except tower shields).");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Rogue")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d6");
            SkillTxt.setText ("Appraise, Balance, Bluff, Climb, Craft, "
                    + "Decipher Script, Diplomacy, Disable Device, Disguise, "
                    + "Escape Artist, Forgery, Gather Information, Hide, Intimidate, "
                    + "Jump, Knowledge (local), Listen, Move Silently, Open Lock, "
                    + "Perform, Profession, Search, Sense Motive, Sleight of Hand, "
                    + "Spot, Swim, Tumble, Use Magic Device, Use Rope");
            SkillssTxt.setText("8");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("Blinding Speed, Combat Archery, Dexterous Fortitude,"
                    + " Dexterous Will, Epic Dodge, Epic Reputation, Epic Skill Focus, Epic Speed, "
                    + "Improved Combat Reflexes, Improved Sneak Attack, Legendary Climber, "
                    + "Lingering Damage, Self-Concealment, Sneak Attack of Opportunity, "
                    + "Spellcasting Harrier, Superior Initiative, Trap Sense, Uncanny Accuracy. "
                    + "The rogue may choose a special rogue ability instead of a bonus feat");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("Rogues are proficient with all simple weapons, plus "
                    + "the hand crossbow, rapier, sap, shortbow, and short sword. "
                    + "Rogues are proficient with light armor, but not with shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Sorcerer")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d4");
            SkillTxt.setText ("Bluff, Concentration, Craft, "
                    + "Knowledge (arcana), Profession, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText(" Augmented Alchemy, Automatic Quicken Spell, Automatic Silent Spell,"
                    + " Automatic Still Spell, Energy Resistance, Enhance Spell, Epic Spell Focus,"
                    + " Epic Spell Penetration, Epic Spellcasting, Familiar Spell, Ignore Material Components, "
                    + "Improved Combat Casting, Improved Heighten Spell, Improved Metamagic, "
                    + "Improved Spell Capacity, Intensify Spell, Master Staff, Master Wand, Multispell, "
                    + "Permanent Emanation, Spell Knowledge, Spell Stowaway, Spell Opportunity");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("Sorcerers are proficient with all simple weapons. "
                    + "They are not proficient with any type of armor or shield. "
                    + "Armor of any type interferes with a sorcerer's gestures, "
                    + "which can cause his spells with somatic components to fail.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Wizard")
        {
            TypeTxt.setText("base");
            HitTxt.setText("d4");
            SkillTxt.setText ("Concentration, Craft, Decipher Script, "
                    + "Knowledge (all skills, taken individually), Profession, "
                    + "Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText(" Augmented Alchemy, Automatic Quicken Spell, Automatic Silent Spell, "
                    + "Automatic Still Spell, Combat Casting, Craft Epic Magic Arms and Armor, Craft Epic Rod, "
                    + "Craft Epic Staff, Craft Epic Wondrous Item, Efficient Item Creation, Enhance Spell, "
                    + "Epic Spell Focus, Epic Spell Penetration, Epic Spellcasting, Familiar Spell, "
                    + "Forge Epic Ring, Ignore Material Components, Improved Combat Casting, "
                    + "Improved Heighten Spell, Improved Metamagic, Improved Spell Capacity, "
                    + "Intensify Spell, Multispell, Permanent Emanation, Scribe Epic Scroll, "
                    + "Spell Focus, Spell Knowledge, Spell Mastery, Spell Penetration Spell Stowaway, "
                    + "Spell Opportunity, Spontaneous Spell, Tenacious Magic. In addition to the feats "
                    + "on this list, the wizard may select any item creation feat or metamagic feat not listed here");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 ClassesI");
            
            ProfTxt.setText("Wizards are proficient with the club, dagger, heavy crossbow, "
                    + "light crossbow, and quarterstaff, but not with any type of armor or shield. "
                    + "Armor of any type interferes with a wizard's movements, which can "
                    + "cause his or her spells with somatic components to fail.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Agent Retriever")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d6");
            SkillTxt.setText ("Appraise, Decipher Script, Diplomacy, Forgery, "
                    + "Gather Information, Knowledge (arcana), Knowledge (geography),"
                    + " Knowledge (history), Knowledge (local), Knowledge (the planes), "
                    + "Listen, Search, Spot, Survival");
            SkillssTxt.setText("6");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Divine");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Gather Information 24 ranks, Knowledge (the planes) 15 ranks");
            ReqFeatTxt.setText("Track");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("An agent retriever gains no proficiency with any weapons, armor, or shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Cosmic Descryer")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d4");
            SkillTxt.setText ("Bluff, Concentration, Craft, Diplomacy, Knowledge (arcana), "
                    + "Knowledge (religion), Knowledge (the planes), Profession, Sense Motive, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Divine");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (the planes) 24 ranks");
            ReqFeatTxt.setText("Spell Focus (Conjuration)");
            ReqSpellsTxt.setText("Ability to cast gate plus any planar ally or planar binding spell");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("Energy Resistance");
            ReqSpecialTxt.setText("Must have previously traveled to any other plane of existence");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("A cosmic descryer gains no proficiency with any weapons, armor, or shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Divine Emissary")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d10");
            SkillTxt.setText ("Concentration, Craft, Diplomacy,"
                    + " Handle Animal, Heal, Knowledge (nature), "
                    + "Listen, Profession, Ride, Spellcraft, Spot, "
                    + "Survival, Swim");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Divine");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+23");
            ReqSkillTxt.setText("Knowledge (religion) 10 ranks");
            ReqFeatTxt.setText("Weapon Focus (deity's favored weapon)");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("Great Smiting");
            ReqSpecialTxt.setText("Must have a patron deity. Furthermore, "
                    + "the potential divine emissary must complete some quest "
                    + "that furthers his or her deity's goals so much that it impresses the deity");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("None");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Epic Infiltrator")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d6");
            SkillTxt.setText ("Appraise, Balance, Bluff, Climb, Craft, Decipher Script, "
                    + "Diplomacy, Disable Device, Disguise, Escape Artist, Forgery, "
                    + "Gather Information, Hide, Intimidate, Jump, Listen, Move Silently, "
                    + "Open Lock, Profession, Sense Motive, Sleight of Hand, Spot");
            SkillssTxt.setText("8");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Bluff 24 ranks, Diplomacy 10 ranks, Disguise 24 ranks, Spot 10 ranks");
            ReqFeatTxt.setText("Alertness");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("Polyglot");
            ReqSpecialTxt.setText("Must have successfully spent one month using the Disguise skill to pose as someone else");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("An epic infiltrator is proficient with all simple "
                    + "and martial weapons, all armor, and shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Guardian Paramount")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d10");
            SkillTxt.setText ("Bluff, Climb, Diplomacy, Intimidate, "
                    + "Jump, Listen, Profession, Spot");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+15");
            ReqSkillTxt.setText("Spot 13 ranks");
            ReqFeatTxt.setText("Alertness, Lightning Reflexes");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("Blinding Speed, Superior Initiative");
            ReqSpecialTxt.setText("Uncanny dodge, evasion");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("A guardian paramount is proficient with all simple "
                    + "and martial weapons, all armor, and shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "High Proselytizer")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d8");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, Heal, Knowledge (arcana),"
                    + "Knowledge (religion), Profession, Sense Motive, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Diplomacy 12 ranks and either Knowledge (religion) 24 ranks or Knowledge (nature) 24 ranks");
            ReqFeatTxt.setText("Leadership");
            ReqSpellsTxt.setText("Ability to cast gate plus any planar ally or planar binding spell");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("Epic Leadership");
            ReqSpecialTxt.setText("Must have a patron deity");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("High proselytizers are proficient with all simple weapons, "
                    + "all armor, and all shields.Spells per Day: At every other high proselytizer level, "
                    + "the character gains new spells per day as if he or she had also gained a level "
                    + "in a divine spellcasting class to which he or she belonged before adding "
                    + "the prestige class level. If already an epic spellcaster, the character "
                    + "gains only the benefit noted under the Spells entry for that epic class. "
                    + "He or she does not, however, gain any other benefit a character of that "
                    + "class would have gained. If the character had more than one divine spellcasting "
                    + "class before becoming a high proselytizer, the player must decide to which class"
                    + " to add each high proselytizer level for the purpose of determining spells per day.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Legendary Dreanought")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d12");
            SkillTxt.setText ("Climb, Craft, Intimidate, Jump, Swim");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+23");
            ReqSkillTxt.setText("Intimidate 15 ranks");
            ReqFeatTxt.setText("Combat Reflexes, Great Cleave, Improved Bull Rush, Improved Critical");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("A legendary dreadnought is proficient with all simple "
                    + "and martial weapons, all armor, and all shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Perfect Wight")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d6");
            SkillTxt.setText ("Appraise, Balance, Bluff, Climb, Craft, Disable Device, "
                    + "Diplomacy, Disguise, Escape Artist, Gather Information, Hide, "
                    + "Intimidate, Jump, Knowledge (any), Listen, Move Silently, "
                    + "Open Lock, Search, Spot, Survival, Tumble, Use Rope");
            SkillssTxt.setText("8");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Hide 24 ranks, Move Silently 24 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("Self-Concealment");
            ReqSpecialTxt.setText("Sneak attack +10d6");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("A perfect wight gains no proficiency with any weapons, armor, or shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Union Sentinel")
        {
            TypeTxt.setText("prestige, epic");
            HitTxt.setText("d10");
            SkillTxt.setText ("Diplomacy, Gather Information, Intimidate, "
                    + "Knowledge (local), Listen, Profession, Search, Sense Motive, Spot");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+21");
            ReqSkillTxt.setText("Decipher Script 7 ranks, Disable Device 7 ranks, Escape Artist 7 ranks, Knowledge (arcana) 4 ranks");
            ReqFeatTxt.setText("Alertness, Improved Disarm");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("Armor Skin");
            ReqSpecialTxt.setText("Must reside in a demiplane-city");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 EpicPrestigeClasses");
            
            ProfTxt.setText("Union Sentinels are proficient with all simple "
                    + "and martial weapons, all armor, and all shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Adept")
        {
            TypeTxt.setText("base, npc");
            HitTxt.setText("d6");
            SkillTxt.setText ("Concentration, Craft, Handle Animal, Heal, "
                    + "Knowledge (all skills taken individually), "
                    + "Profession, Spellcraft, Survival");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Divine");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 NPCClasses");
            
            ProfTxt.setText("Adepts are skilled with all simple weapons. "
                    + "Adepts are not proficient with any type of armor nor with shields.");
            Spell1Txt.setText("bless, burning hands, cause fear, command, comprehend languages, "
                    + "cure light wounds, detect chaos, detect evil, detect good, detect law, "
                    + "endure elements, obscuring mist, protection from chaos, protection from evil, "
                    + "protection from good, protection from law, sleep");
            Spell2Txt.setText("aid, animal trance, bear's endurance, bull's strength, cat's grace, cure moderate wounds, "
                    + "darkness, delay poison, invisibility, mirror image, resist energy, scorching ray, see invisibility, web");
            Spell3Txt.setText("animate dead, bestow curse, contagion, continual flame, cure serious wounds, daylight, "
                    + "deeper darkness, lightning bolt, neutralize poison, remove curse, remove disease, tongues");
            Spell4Txt.setText("cure critical wounds, minor creation, polymorph, restoration, stoneskin, wall of fire");
            Spell5Txt.setText("baleful polymorph, break enchantment, commune, "
                    + "heal, major creation, raise dead, true seeing, wall of stone"); 
        }
        else if (itemText == "Aristocrat")
        {
            TypeTxt.setText("base, npc");
            HitTxt.setText("d8");
            SkillTxt.setText ("Appraise, Bluff, Diplomacy, Disguise, Forgery, "
                    + "Gather Information, Handle Animal, Intimidate, "
                    + "Knowledge (all skills taken individually), "
                    + "Listen, Perform, Ride, Sense Motive, Speak Language, "
                    + "Spot, Swim, Survival");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 NPCClasses");
            
            ProfTxt.setText("The aristocrat is proficient in the use of all simple"
                    + " and martial weapons and with all types of armor and shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Commoner")
        {
            TypeTxt.setText("base, npc");
            HitTxt.setText("d4");
            SkillTxt.setText ("Climb, Craft, Handle Animal, Jump, "
                    + "Listen, Profession, Ride, Spot, Swim, Use Rope");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 NPCClasses");
            
            ProfTxt.setText("The commoner is proficient with one simple weapon. "
                    + "He is not proficient with any other weapons, nor is he proficient "
                    + "with any type of armor or shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Expert")
        {
            TypeTxt.setText("base, npc");
            HitTxt.setText("d6");
            SkillTxt.setText ("The expert can choose any ten skills to be class skills");
            SkillssTxt.setText("6");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 NPCClasses");
            
            ProfTxt.setText("The expert is proficient in the use of all simple "
                    + "weapons and with light armor but not shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Warrior")
        {
            TypeTxt.setText("base, npc");
            HitTxt.setText("d8");
            SkillTxt.setText ("Climb, Handle Animal, Intimidate, Jump, Ride, Swim");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 NPCClasses");
            
            ProfTxt.setText("The warrior is proficient in the use of all simple "
                    + "and martial weapons and all armor and shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Arcane Archer")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d8");
            SkillTxt.setText ("Craft, Hide");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Blinding Speed, Combat Archery, Distant Shot, "
                    + "Epic Prowess, Epic Speed, Epic Toughness, Epic Weapon Focus (any bow other than a crossbow),"
                    + " Improved Arrow of Death, Improved Combat Casting, Improved Low-Light Vision,"
                    + " Improved Manyshot, Swarm of Arrows, Uncanny Accuracy");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("Elf or half-elf");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+6");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("Point Blank Shot, Precise Shot, Weapon Focus (longbow or shortbow)");
            ReqSpellsTxt.setText("Ability to cast gate plus any planar ally or planar binding spell");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("An arcane archer is proficient with all simple "
                    + "and martial weapons, light armor, medium armor, and shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Arcane Trickster")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d4");
            SkillTxt.setText ("Appraise, Balance, Bluff, Climb, Concentration, Craft, Decipher Script, "
                    + "Diplomacy, Disable Device, Disguise, Escape Artist, Gather Information, Hide, "
                    + "Jump, Knowledge (all skills taken individually), Listen, "
                    + "Move Silently, Open Lock, Profession, Sense Motive, Search, Sleight of Hand, "
                    + "Speak Language, Spellcraft, Spot, Swim, Tumble, Use Rope");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Divine");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Automatic Silent Spell Automatic Still Spell, Blinding Speed, "
                    + "Epic Skill Focus, Improved Combat Casting, Improved Sneak Attack, Improved Spell Capacity, "
                    + "Lingering Damage, Self-Concealment, Sneak Attack of Opportunity, Spell Knowledge, "
                    + "Spell Opportunity, Spell Stowaway");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Decipher Script 7 ranks, Disable Device 7 ranks, Escape Artist 7 ranks, Knowledge (arcana) 4 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("Ability to cast mage hand and at least one arcane spell of 3rd level or higher");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("Sneak attack +2d6");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Arcane tricksters gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Archmage")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d4");
            SkillTxt.setText ("Concentration, Craft (alchemy), Knowledge (all skills taken individually), "
                    + "Profession, Search, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (arcana) 15 ranks, Spellcraft 15 ranks");
            ReqFeatTxt.setText("Skill Focus (Spellcraft), Spell Focus in two schools of magic");
            ReqSpellsTxt.setText("Ability to cast 7th-level arcane spells, knowledge of 5th-level or higher spells from at least five schools");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Archmages gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Assassin")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d6");
            SkillTxt.setText ("Balance, Bluff, Climb, Craft, Decipher Script, "
                    + "Diplomacy, Disable Device, Disguise, Escape Artist, Forgery,"
                    + " Gather Information, Hide, Intimidate, Jump, Listen, Move Silently, "
                    + "Open Lock, Search, Sense Motive, Sleight of Hand, Spot, Swim, Tumble, "
                    + "Use Magic Device, Use Rope");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText("Dexterous Fortitude, Dexterous Will, Improved Combat Casting, "
                    + "Improved Death Attack, Improved Sneak Attack, Improved Spell Capacity, "
                    + "Legendary Tracker, Lingering Damage, Sneak Attack of Opportunity, Spell Knowledge, "
                    + "Spontaneous Spell, Superior Initiative, Tenacious Magic, Uncanny Accuracy");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Disguise 4 ranks, Hide 8 ranks, Move Silently 8 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("The character must kill someone for no other reason than to join the assassins");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Assassins are proficient with the crossbow (hand, light, or heavy), "
                    + "dagger (any type), dart, rapier, sap, shortbow (normal and composite), "
                    + "and short sword. Assassins are proficient with light armor but not with shields.");
            Spell1Txt.setText("disguise self, detect poison, feather fall, ghost sound, jump, obscuring mist, sleep, true strike");
            Spell2Txt.setText("alter self, cat's grace, darkness, fox's cunning, illusory script, "
                    + "invisibility, pass without trace, spider climb, undetectable alignment");
            Spell3Txt.setText("deep slumber, deeper darkness, false life, magic circle against good, misdirection, nondetection");
            Spell4Txt.setText("clairaudience/clairvoyance, dimension door, freedom of movement, "
                    + "glibness, greater invisibility, locate creature, modify memory, poison");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Blackguard")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d10");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, Handle Animal, "
                    + "Heal, Hide, Intimidate, Knowledge (religion), Profession, Ride");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Divine");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Armor Skin, Devastating Critical, Epic Leadership, "
                    + "Epic Prowess, Epic Reputation, Epic Toughness, Epic Weapon Focus, "
                    + "Great Smiting, Improved Aura of Despair, Improved Combat Casting, "
                    + "Improved Sneak Attack, Improved Spell Capacity, Legendary Commander,"
                    + " Legendary Rider, Lingering Damage, Negative Energy Burst, Overwhelming Critical,"
                    + " Perfect Health, Permanent Emanation, Planar Turning, Spontaneous Spell, "
                    + "Undead Mastery, Unholy Strike, Widen Aura of Despair, Zone of Animation");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+6");
            ReqSkillTxt.setText("Hide 5 ranks, Knowledge (religion) 2 ranks");
            ReqFeatTxt.setText("Cleave, Improved Sunder, Power Attack");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("The character must have made peaceful contact "
                    + "with an evil outsider who was summoned by him or someone else");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Blackguards are proficient with all simple and martial weapons, "
                    + "with all types of armor, and with shields.");
            Spell1Txt.setText("cause fear, corrupt weapon, cure light wounds, doom, inflict light wounds, magic weapon, summon monster I");
            Spell2Txt.setText("bull's strength, cure moderate wounds, darkness, death knell, "
                    + "eagle's splendor, inflict moderate wounds, shatter, summon monster II");
            Spell3Txt.setText("contagion, cure serious wounds, deeper darkness, "
                    + "inflict serious wounds, protection from energy, summon monster III");
            Spell4Txt.setText("cure critical wounds, freedom of movement, inflict critical wounds, poison, summon monster IV");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Dragon Disciple")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d12");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, Escape Artist, "
                    + "Gather Information, Knowledge (all skills, taken individually), "
                    + "Listen, Profession, Search, Speak Language, Spellcraft, Spot");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Armor Skin, Damage Reduction, Epic Prowess, "
                    + "Epic Skill Focus (Knowledge [arcana]), Epic Toughness, Extended Life Span, "
                    + "Flyby Attack, Great Charisma, Great Constitution, Great Strength, Hover, "
                    + "Improved Combat Casting, Improved Darkvision, Improved Spell Capacity,"
                    + " Improved Spell Resistance, Snatch, Spell Knowledge, Wingover");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("Any nondragon (cannot already be a half-dragon)");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (arcana) 8 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("Ability to cast arcane spells without preparation");
            ReqLanTxt.setText("Draconic");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("The player chooses a dragon variety when taking the first level in this prestige class");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Dragon disciples gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Duelist")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d10");
            SkillTxt.setText ("Balance, Bluff, Escape Artist, Jump, "
                    + "Listen, Perform, Sense Motive, Spot, Tumble");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Blinding Speed, Epic Prowess, Epic Reputation, "
                    + "Epic Skill Focus, Epic Speed, Epic Weapon Focus (rapier), "
                    + "Exceptional Deflection*, Improved Combat Reflexes, Improved Whirlwind Attack, "
                    + "Infinite Deflection*, Perfect Two-Weapon Fighting, Superior Initiative, "
                    + "Two-Weapon Rend");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+6");
            ReqSkillTxt.setText("Perform 3 ranks, Tumble 5 ranks");
            ReqFeatTxt.setText("Dodge, Mobility, Weapon Finesse");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("The duelist is proficient with all simple and martial weapons, "
                    + "but no type of armor or shield.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Dwarven Defender")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d12");
            SkillTxt.setText ("Craft, Listen, Sense Motive, Spot");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText("Armor Skin, Bulwark of Defense, Damage Reduction,"
                    + " Devastating Critical, Energy Resistance, Epic Endurance, Epic Prowess, "
                    + "Epic Toughness, Epic Weapon Focus, Fast Healing, Improved Combat Reflexes,"
                    + " Improved Darkvision, Instant Reload, Mobile Defense, Overwhelming Critical, "
                    + "Perfect Health, Spellcasting Harrier");
            EpicFeatInt.setText("5");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("Dwarf");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+7");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("Dodge, Endurance, Toughness");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("A dwarven defender is proficient with all simple and martial weapons, all types of armor, and shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Eldritch Knight")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d6");
            SkillTxt.setText ("Concentration, Craft, Decipher Script, "
                    + "Jump, Knowledge (arcana), Knowledge (nobility and royalty), "
                    + "Ride, Sense Motive, Spellcraft, Swimm");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Armor Skin, Automatic Still Spell, Combat Archery, "
                    + "Damage Reduction, Devastating Critical, Dire Charge, Distant Shot, "
                    + "Enhance Spell, Epic Prowess, Epic Spell Focus, Epic Spell Penetration, "
                    + "Epic Spellcasting, Epic Toughness, Epic Weapon Focus, Ignore Material Components, "
                    + "Improved Combat Casting, Improved Combat Reflexes, Improved Manyshot, "
                    + "Improved Spell Capacity, Improved Whirlwind Attack, Instant Reload, Legendary Rider,"
                    + " Overwhelming Critical, Penetrate Damage Reduction, Perfect Two-Weapon Fighting,"
                    + " Permanent Emanation, Spell Knowledge, Spell Opportunity, Spell Stowaway, "
                    + "Spellcasting Harrier, Spontaneous Spell, Storm of Throws, Superior Initiative, "
                    + "Swarm of Arrows, Tenacious Magic, Two-Weapon Rend, Uncanny Accuracy");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("Must be proficient with all martial weapons");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("Ability to cast arcane spells without preparation");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Eldritch knights gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Hierophant")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d8");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, "
                    + "Heal, Knowledge (arcana), Knowledge (religion), "
                    + "Profession, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (religion) 15 ranks");
            ReqFeatTxt.setText("Any metamagic feat");
            ReqSpellsTxt.setText("Able to cast 7th-level divine spells");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Hierophants gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Horizon Walker")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d8");
            SkillTxt.setText ("Balance, Climb, Diplomacy, Handle Animal, "
                    + "Hide, Knowledge (geography), Listen, Move Silently, "
                    + "Profession, Ride, Speak Language (none), Spot, Survival");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Armor Skin, Blinding Speed, Energy Resistance, "
                    + "Epic Endurance, Epic Prowess, Epic Reputation, Epic Skill Focus, "
                    + "Epic Speed, Epic Toughness, Extended Life Span, Legendary Climber, "
                    + "Perfect Health, Polyglot");
            EpicFeatInt.setText("4");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (geography) 8 ranks");
            ReqFeatTxt.setText("Endurance");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Horizon walkers gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Loremaster")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d4");
            SkillTxt.setText ("Appraise, Concentration, Craft (alchemy), "
                    + "Decipher Script, Gather Information, Handle Animals, "
                    + "Heal, Knowledge (all skills taken individually), Perform, "
                    + "Profession, Speak Language, Spellcraft, Use Magic Device");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Divine");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Augmented Alchemy, Automatic Quicken Spell, "
                    + "Automatic Silent Spell, Automatic Still Spell, Craft Epic Magic Arms and Armor, "
                    + "Craft Epic Rod, Craft Epic Staff, Craft Epic Wondrous Item, "
                    + "Efficient Item Creation, Enhance Spell, Epic Spell Focus, "
                    + "Epic Spell Penetration, Epic Spellcasting, Forge Epic Ring, "
                    + "Ignore Material Components, Improved Combat Casting, Improved Heighten Spell, "
                    + "Improved Metamagic, Improved Spell Capacity, Intensify Spell, Master Staff,"
                    + " Master Wand, Multispell, Permanent Emanation, Polyglot, Scribe Epic Scroll,"
                    + " Spell Knowledge, Spell Stowaway, Spell Opportunity, Spontaneous Spell, "
                    + "Tenacious Magic. In addition to the feats on this list, the loremaster can "
                    + "select a loremaster secret instead of a bonus feat");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (any two) 10 ranks in each");
            ReqFeatTxt.setText("Any three metamagic or item creation feats, plus Skill Focus (Knowledge [any individual Knowledge skill])");
            ReqSpellsTxt.setText("Able to cast seven different divination spells, one of which must be 3rd level or higher");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Loremasters gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Mystic Theurge")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d4");
            SkillTxt.setText ("Concentration, Craft, Decipher Script, "
                    + "Knowledge (arcana), Knowledge (religion), Profession, "
                    + "Sense Motive, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Divine");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText(" Automatic Quicken Spell, Automatic Silent Spell, "
                    + "Automatic Still Spell, Bonus Domain, Enhance Spell, Epic Spell Focus, "
                    + "Epic Spell Penetration, Epic Spellcasting, Ignore Material Components,"
                    + " Improved Alignment-Based Casting, Improved Combat Casting, Improved Heighten Spell, "
                    + "Improved Metamagic, Improved Spell Capacity, Intensify Spell, Multispell, "
                    + "Permanent Emanation, Spell Knowledge, Spell Opportunity, Spell Stowaway,"
                    + " Spontaneous Domain Access, Spontaneous Spell, Tenacious Magic");
            EpicFeatInt.setText("6");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (arcana) 6 ranks, Knowledge (religion) 6 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("Able to cast 2nd-level divine spells and 2nd-level arcane spells");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Mystic theurges gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Shadowdancer")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d8");
            SkillTxt.setText ("Balance, Bluff, Decipher Script, Diplomacy, "
                    + "Disguise, Escape Artist, Hide, Jump, Listen, Move Silently,"
                    + " Perform, Profession, Search, Sleight of Hand, Spot, Tumble, Use Rope");
            SkillssTxt.setText("6");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("10");
            EpicFeatListTxt.setText("Blinding Speed, Dexterous Fortitude, "
                    + "Dexterous Will, Epic Dodge, Epic Skill Focus, Epic Speed, "
                    + "Exceptional Deflection, Improved Combat Reflexes, Improved Darkvision, "
                    + "Improved Whirlwind Attack, Infinite Deflection, Legendary Leaper, "
                    + "Reflect Arrows, Self-Concealment, Spellcasting Harrier, Superior Initiative");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Move Silently 8 ranks, Hide 10 ranks, Perform (dance) 5 ranks");
            ReqFeatTxt.setText("Combat Reflexes, Dodge, Mobility");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Shadowdancers are proficient with the club, "
                    + "crossbow (hand, light, or heavy), dagger (any type), "
                    + "dart, mace, morningstar, quarterstaff, rapier, sap, "
                    + "shortbow (normal and composite), and short sword. Shadowdancers "
                    + "are proficient with light armor but not with shields.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Thaumaturgist")
        {
            TypeTxt.setText("prestige");
            HitTxt.setText("d4");
            SkillTxt.setText ("Concentration, Craft, Diplomacy, Knowledge (religion),"
                    + " Knowledge (the planes), Profession, Sense Motive, Speak Language (none), "
                    + "Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Divine");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("Spell Focus (conjuration)");
            ReqSpellsTxt.setText("Able to cast lesser planar ally");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PrestigeClasses");
            
            ProfTxt.setText("Thaumaturgists gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Psion")
        {
            TypeTxt.setText("base, psionic");
            HitTxt.setText("d4");
            SkillTxt.setText ("Concentration, Craft, Knowledge (all skills, taken individually),"
                    + " Profession, Psicraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Psions are proficient with the club, dagger, heavy crossbow, "
                    + "light crossbow, quarterstaff, and shortspear. They are not proficient "
                    + "with any type of armor or shield. Armor does not, however, "
                    + "interfere with the manifestation of powers.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Psychic Warrior")
        {
            TypeTxt.setText("base, psionic");
            HitTxt.setText("d8");
            SkillTxt.setText ("Autohypnosis, Climb, Concentration, Craft, "
                    + "Jump, Knowledge (psionics), Profession, Ride, Search, Swim");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("21");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Psychic warriors are proficient with all simple "
                    + "and martial weapons, with all types of armor (heavy, medium, and light), "
                    + "and with shields (except tower shields).");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Soulknife")
        {
            TypeTxt.setText("base, psionic");
            HitTxt.setText("d10");
            SkillTxt.setText ("Autohypnosis, Climb, Concentration, Craft, "
                    + "Hide, Jump, Knowledge (psionics), Listen, Move Silently, "
                    + "Profession, Spot, Tumble");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("20");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("3");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Soulknives are proficient with all simple weapons, "
                    + "with their own mind blades, and with light armor and shields (except tower shields).");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Wilder")
        {
            TypeTxt.setText("base, psionic");
            HitTxt.setText("d6");
            SkillTxt.setText ("Autohypnosis, Balance, Bluff, Climb, Concentration, "
                    + "Craft, Escape Artist, Intimidate, Jump, Knowledge (psionics), "
                    + "Listen, Profession, Psicraft, Sense Motive, Spot, Swim, Tumble");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("None");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Wilders are proficient with all simple weapons, with light armor, and with shields (except tower shields).");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Cerebremancer")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d4");
            SkillTxt.setText ("Concentration, Craft, Decipher Script, "
                    + "Knowledge (arcana) Int, Knowledge (psionics), "
                    + "Profession, Psicraft, Spellcraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Arcane, Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (arcana) 6 ranks, Knowledge (psionics) 6 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("Able to cast 2nd-level arcane spells");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Able to manifest 2nd-level powers");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Cerebremancers gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Elocater")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d6");
            SkillTxt.setText ("Autohypnosis, Balance, Climb, Concentration, Craft, "
                    + "Disable Device, Escape Artist, Gather Information, Hide, Jump, "
                    + "Knowledge (local), Knowledge (psionics), Listen, Move Silently, "
                    + "Open Lock, Perform, Profession, Psicraft, Search, Sense Motive, "
                    + "Sleight of Hand, Spot, Swim, Tumble, Use Psionic Device, Use Rope");
            SkillssTxt.setText("6");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+3");
            ReqSkillTxt.setText("Concentration 8 ranks");
            ReqFeatTxt.setText("Mobility, Spring Attack");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Able to manifest 1st-level powers");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Elocaters are proficient with all simple and martial weapons and with light armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Psionic Fist")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d6");
            SkillTxt.setText ("Autohypnosis, Concentration, Craft, Escape Artist, "
                    + "Hide, Jump, Knowledge (psionics), Knowledge (religion), Listen, "
                    + "Move Silently, Psicraft, Sense Motive, Spot, Tumble");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+4");
            ReqSkillTxt.setText("Concentration 9 ranks");
            ReqFeatTxt.setText("Wild Talent");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("None");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("Still mind class feature");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Psionic Fists gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Slayer")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d8");
            SkillTxt.setText ("Bluff, Concentration, Knowledge (dungeoneering), "
                    + "Listen, Psicraft, Sense Motive, Spot, Survival");
            SkillssTxt.setText("4");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+4");
            ReqSkillTxt.setText("Knowledge (dungeoneering) 4 ranks");
            ReqFeatTxt.setText("Track");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Must have a power point reserve of at least 1 power point");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Slayers are proficient with all simple and martial weapons and with all types of armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Metamind")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d4");
            SkillTxt.setText ("Autohypnosis, Concentration, Craft (any), "
                    + "Knowledge (psionics), Psicraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (psionics) 8 ranks, Psicraft 4 ranks");
            ReqFeatTxt.setText("Psicrystal Affinity");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Manifester level 4th");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Metaminds gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Psion Uncarnate")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d4");
            SkillTxt.setText ("Autohypnosis, Bluff, Concentration, Craft (any), "
                    + "Disguise, Knowledge (the planes), Knowledge (psionics), "
                    + "Psicraft, Sense Motive");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Knowledge (psionics) 8 ranks, Psicraft 8 ranks");
            ReqFeatTxt.setText("Psionic Body");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Able to manifest 3rd-level powers");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("Must have had some instruction by another psion uncarnate");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Psion uncarnates gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Pyrokinecticist")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d8");
            SkillTxt.setText ("Climb, Concentration, Craft (any), "
                    + "Intimidate, Jump, Psicraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("None");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Concentration 8 ranks, Craft (alchemy) 1 rank, Knowledge (psionics) 2 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Must have a power point reserve of at least 1 power point");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("Must have set fire to a structure of any size just to watch it burn");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Pyrokineticists gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "Thrallherd")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d4");
            SkillTxt.setText ("Autohypnosis, Bluff, Concentration, Craft (any), "
                    + "Diplomacy, Knowledge (psionics), Psicraft, Sense Motive");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("None");
            ReqSkillTxt.setText("Diplomacy 4 ranks, Knowledge (psionics) 8 ranks");
            ReqFeatTxt.setText("Inquisitor");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Manifester level 5th and able to manifest mindlink");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("None");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("Thrallherds gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
        else if (itemText == "War Mind")
        {
            TypeTxt.setText("prestige, psionic");
            HitTxt.setText("d10");
            SkillTxt.setText ("Auto hypnosis, Concentration, Intimidate, "
                    + "Knowledge (history), Knowledge (psionics), Psicraft");
            SkillssTxt.setText("2");
            SkillPointAbilityTxt.setText("Int");
            SpellTypeTxt.setText("Psionic");
            EpicFeatBaseTxt.setText("None");
            EpicFeatListTxt.setText("None");
            EpicFeatInt.setText("None");
            EpicFullTxt.setText("<div");
            ReqRaceTxt.setText("None");
            ReqWeaponTxt.setText("None");
            ReqBaseAttackTxt.setText("+3");
            ReqSkillTxt.setText("Knowledge (history) 2 ranks, Knowledge (psionics) 8 ranks");
            ReqFeatTxt.setText("None");
            ReqSpellsTxt.setText("None");
            ReqLanTxt.setText("None");
            ReqPsiTxt.setText("Must have a power point reserve of at least 1 power point");
            ReqEpicFeatTxt.setText("None");
            ReqSpecialTxt.setText("Must have had some instruction by another war mind");
            FullTxt.setText("<div");
            RefTxt.setText("SRD 3.5 PsionicClasses");
            
            ProfTxt.setText("War minds gain no proficiency with any weapon or armor.");
            Spell1Txt.setText("None");
            Spell2Txt.setText("None");
            Spell3Txt.setText("None");
            Spell4Txt.setText("None");
            Spell5Txt.setText("None"); 
        }
      
        
    }//GEN-LAST:event_ShowBtnActionPerformed

    private void SubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtnActionPerformed
       
    }//GEN-LAST:event_SubmitBtnActionPerformed

    private void ClassBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClassBoxActionPerformed

    private void TextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void setVisible() {
        new Create_Char().setVisible(true);
    }
   
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Create_Char.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Create_Char.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Create_Char.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Create_Char.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Create_Char().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AllignBox;
    private javax.swing.JComboBox<String> ClassBox;
    private javax.swing.JTextField EpicFeatBaseTxt;
    private javax.swing.JTextField EpicFeatInt;
    private javax.swing.JTextArea EpicFeatListTxt;
    private javax.swing.JTextField EpicFullTxt;
    private javax.swing.JTextArea FullTxt;
    private javax.swing.JTextField HitTxt;
    private javax.swing.JTextArea ProfTxt;
    private javax.swing.JTextField RefTxt;
    private javax.swing.JTextField ReqBaseAttackTxt;
    private javax.swing.JTextField ReqEpicFeatTxt;
    private javax.swing.JTextField ReqFeatTxt;
    private javax.swing.JTextField ReqLanTxt;
    private javax.swing.JTextField ReqPsiTxt;
    private javax.swing.JTextField ReqRaceTxt;
    private javax.swing.JTextField ReqSkillTxt;
    private javax.swing.JTextField ReqSpecialTxt;
    private javax.swing.JTextField ReqSpellsTxt;
    private javax.swing.JTextField ReqWeaponTxt;
    private javax.swing.JButton ShowBtn;
    private javax.swing.JTextField SkillPointAbilityTxt;
    private javax.swing.JTextArea SkillTxt;
    private javax.swing.JLabel SkillsTxt;
    private javax.swing.JTextField SkillssTxt;
    private javax.swing.JTextArea Spell1Txt;
    private javax.swing.JTextArea Spell2Txt;
    private javax.swing.JTextArea Spell3Txt;
    private javax.swing.JTextArea Spell4Txt;
    private javax.swing.JTextArea Spell5Txt;
    private javax.swing.JTextField SpellTypeTxt;
    private javax.swing.JButton SubmitBtn;
    private javax.swing.JTextField TextName;
    private javax.swing.JTextField TypeTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
}
